apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-stack

spec:
  capacity:
    storage: 2Gi
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /private/tmp/localstack

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-stack

spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeName: local-stack
  storageClassName: manual

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-stack

spec:
  selector:
    matchLabels:
      app: local-stack
  replicas: 1
  template:
    metadata:
      labels:
        app: local-stack
    spec:
      containers:
          - name: local-stack
            image: localstack/localstack
            ports:
              - containerPort: 31000 # DynamoDB
              - containerPort: 31001 # DynamoDB Stream
              - containerPort: 31002 # S3
              - containerPort: 31003 # SNS
              - containerPort: 31004 # SQS
              - containerPort: 31005 # CFN
              - containerPort: 31006 # Lambda
              - containerPort: 31007 # STS
              - containerPort: 31008 # CloudWatch
              - containerPort: 32000 # Web
            env:
              - name: SERVICES
                value: "sts:31007,kinesis,iam,firehose,lambda:31006,cloudwatch:31008,kms,serverless,cloudformation:31005,dynamodb:31000,dynamodbstreams:31001,s3:31002,sns:31003,sqs:31004"
              - name: PORT_WEB_UI
                value: "32000"
              - name: DATA_DIR
                value: "/tmp/localstack/data"
              - name: LAMBDA_REMOTE_DOCKER
                value: "True"
              - name: DEBUG
                value: "1"
            volumeMounts:
              - name: local-stack-mnt
                mountPath: /tmp/localstack
              - name: dockersock
                mountPath: /var/run/docker.sock
            livenessProbe:
              httpGet:
                path: /
                port: 32000
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 30
              timeoutSeconds: 10
            readinessProbe:
              httpGet:
                path: /
                port: 32000
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 30
              timeoutSeconds: 10
      volumes:
        - name: local-stack-mnt
          persistentVolumeClaim:
            claimName: local-stack
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock

---
apiVersion: v1
kind: Service
metadata:
  name: local-stack

spec:
  selector:
    app: local-stack
  type: LoadBalancer
  ports:
      - port: 32000
        protocol: TCP
        name: web
        nodePort: 32000
      - port: 31000
        protocol: TCP
        name: dynamodb
        nodePort: 31000
      - port: 31001
        protocol: TCP
        name: dynamodbstreams
        nodePort: 31001
      - port: 31002
        protocol: TCP
        name: s3
        nodePort: 31002
      - port: 31003
        protocol: TCP
        name: sns
        nodePort: 31003
      - port: 31004
        protocol: TCP
        name: sqs
        nodePort: 31004
      - port: 31005
        protocol: TCP
        name: cfn
        nodePort: 31005
      - port: 31006
        protocol: TCP
        name: lambda
        nodePort: 31006
      - port: 31007
        protocol: TCP
        name: sts
        nodePort: 31007
      - port: 31008
        protocol: TCP
        name: cloudwatch
        nodePort: 31008
